\MED-PC  Code for Automated Attentional Set Shift Task  (AASST)
\Training level 3.1
\Mice learn red light = left and blue light = right reward. Rewards are given following a response on the correct port
\Training levels 3 and 4 are for exposure to stimuli
\ R = left
\ B = right

\INPUTS
^left_NP = 1
^center_NP = 2
^right_NP = 3

\OUTPUTS
^center_port_light = 1
^house_light = 2
^house_tone = 3
^right_reward = 4
^left_reward = 5
^white_audio = 13
^blue_audio = 14
^green_audio = 15
^orange_audio = 16
^red_light = 17
^yellow_light = 18
^green_light = 19
^blue_light = 21
^white_light = 22
^purple_light = 23

\Variables
\A = List for randomization of stimuli
\C = Number of correct responses (should be equal to G(1))
\D = Duration of nosepoke holds (array, in milliseconds)
\E = Head entry time stamps (array of times, used to calculate nosepoke duration)
\G = Rewards given counter
    \G(0) = Total rewards given
    \G(1) = Left reward given
    \G(2) = Right reward given

\I = Trial index (subscript of arrays)
\L= Leaving time stamp (array of times used to calculate nosepoke duration)
\M = No response after stimulus presentation
    \M(0) = Total no response
    \M(1) = Left no response
    \M(2) = Right no response
\N = No response
\P = Port identifier (1 = left port, 2 = right reward port, 0 = center NP)
\T = Session timer
\W = Incorrect response
    \W(0) = Total Incorrect
    \W(1) = Incorrect response (L)
    \W(2) = Incorrect response (R)

DIM D = 999
DIM E = 999
DIM L = 999
DIM P = 999
DIM H = 999
\H(I) = 1, Left trial correct
\H(I) = 2, left trial incorrect
\H(I) = 3, right trial correct
\H(I) = 4, right trial incorrect
DIM M =3
DIM W = 3
DIM G = 3

LIST X = 1, 2
\(A = 1, left; A = 2, right)


S.S.1,                                 \Start program, initialize variables, loop
S1,
    #START: Z1 ---> S2
S2,                                         \First trial becomes available
    #Z1: ON^house_light; ADD I; SHOW 2, Trial Index, I ---> S3
S3,
    5": OFF^house_light ---> S4
S4,
    #R^center_NP: Z2 ---> S2
    20": Z1; ADD N; SHOW 3, No trial initiated, N ---> S2


S.S.2,                                     \Randomize Trial
S1,
    #Z2: RANDI A = X ---> S2
S2,
    0.01": IF A =1[@TRUE, @FALSE]
        @TRUE: Z3 ---> S1
        @FALSE: Z4 ---> S1


S.S.3,                                    \red light stimulus & left reward
S1,
    #Z3: ON^red_light ---> S2
S2,
    0.5": OFF^red_light ---> S3
S3,
    #R^left_NP: ON^left_reward; ADD G(0); SHOW 4, Rewards given, G(0); ADD G(1); SET H(I) = 1 ---> S4
    #R^right_NP: SET H(I) = 2; Z5 ---> S1

    10": Z7 ---> S1
S4,
    1": OFF^left_reward; IF G(0) = 100[@TRUE, @FALSE]
        @TRUE: ON^house_light; SET D(I) = -987.987; SET E(I) = -987.987; SET L(I) = -987.987; SET H(I) = -987.987; SET P(I) = -987.987 ---> STOPSAVE
        @FALSE: Z1 ---> S1


S.S.4,                                    \blue light stimulus & right reward
S1,
    #Z4: ON^blue_light ---> S2
S2,
    0.5": OFF^blue_light ---> S3
S3,
    #R^right_NP: ON^right_reward; ADD G(0); SHOW 4, Rewards given, G(0); ADD G(2); SET H(I) = 3 ---> S4
    #R^left_NP: SET H(I) = 4; Z6 ---> S1

    10": Z8 ---> S1
S4,
    1": OFF^right_reward; IF G(0) = 100[@TRUE, @FALSE]
        @TRUE: ON^house_light; SET D(I) = -987.987; SET E(I) = -987.987; SET L(I) = -987.987; SET H(I) = -987.987; SET P(I) = -987.987 ---> STOPSAVE
        @FALSE: Z1 ---> S1


S.S.5,                                    \Entry Moniter (L and R ports give value of 0.01 if entered from the duration calculation)
S1,
    #START: ---> S2
S2,
    #R^center_NP: SET P(I) = 1; SET E(I)= T ---> S3
    #R^right_NP: SET P(I) = 2; SET E(I) = T ---> S3
    #R^left_NP: SET P(I) = 3; SET E(I) = T ---> S3

S3,
    #R^center_NP: ---> S3
    #R^right_NP: ---> S3
    #R^left_NP: ---> S3
    0.01": SET L(I) = T; SET D(I) = (L(I) - E(I)) ---> S2


S.S.6,                                      \Incorrect response when presented with left stim (red light)
S1,
    #Z5: ON^house_light; ADD W(0); SHOW 5, Incorrect response, W(0); ADD W(1); Z1 ---> SX

S.S.7,                                     \ Incorrect response when presented with right stim (blue light)
S1,
    #Z6: ON^house_light; ADD W(0); SHOW 5, Incorrect response, W(0); ADD W(2); Z1 ---> SX

S.S.8,                                      \Missed response when presented with left stimuli (red light)
S1,
    #Z7: ADD M(1); ADD M(0); SHOW 6, No response, M(0); Z1 ---> SX

S.S.9,                                      \Missed response when presented with right stimuli (blue light)
S1,
    #Z8: ADD M(2); ADD M(0); SHOW 6, No response, M(0); Z1 ---> SX

S.S.10,                                     \Session Timer in seconds and seal arrays
S1,
    #START: ---> S2
S2,
    0.01": SET T = T + 0.01; SHOW 1, Session Timer, T; IF T >= 4500 [@TRUE, @FALSE]
        @TRUE: IF I > 1000 [@TRUE, @FALSE]
            @TRUE: ---> SX
            @FALSE: SET D(I) = -987.987; SET E(I) = -987.987; SET L(I) = -987.987; SET H(I) = -987.987; SET P(I) = -987.987 ---> STOPSAVE
        @FALSE: ---> SX

