\MED-PC  Code for Automated Attentional Set Shift Task  (AASST)
\Training level 2.1
\Mice learn to nose poke for random reward after flash in center port

\INPUTS
^left_NP = 1
^center_NP = 2
^right_NP = 3

\OUTPUTS
^center_port_light = 1
^house_light = 2
^house_tone = 3
^right_reward = 4
^left_reward = 5
^red_light = 17
^yellow_light = 18
^green_light = 19
^blue_light = 21
^white_light = 22

^purple_light = 23

\Variables
\A = List for randomization
\C = Rewards collected
    \C(1) = Total reward collected
    \C(2) = Left reward collected
    \C(3) = right reward collected
\D = Duration of nosepoke holds (array, in milliseconds)
\E = Head entry time stamps (array of times, used to calculate nosepoke duration)
\H = hold duration
\M = Number of missed trials counter (reward was not collected/trial was ignored)
\G = Rewards given counter
    \G(1) = Total rewards given
    \G(2) = left reward given
    \G(3) = right reward given
\I = Trial index (subscript of arrays)
\L= Leaving time stamp (array of times used to calculate nosepoke duration)
\N = incomplete nosepoke counter
\P = Port identifier (1 = left port, 2 = right reward port, 0 = center NP)
\T = Session timer
\K  = Response classification (list of when a response occurred, 1 = During trial, 2 = intertrial interval)

DIM A = 2
DIM D = 999
DIM E = 999
DIM L = 999
DIM P = 999
DIM R = 999
DIM C = 3
DIM G = 3
LIST X = 1, 2
\(A = 1, left; A = 2, right)


S.S.1,                                 \Start program, initialize variables, loop
S1,
    #START: Z1 ---> S2
S2,                                         \First trial becomes available
    #Z1: ON^house_light; ADD I; SHOW 2, Trial Index, I ---> S3
S3,
    5": OFF^house_light ---> S4
S4,
    1": ON^center_port_light ---> S5
S5,
    0.25": OFF^center_port_light ---> S6
S6,
    #R^center_NP: ON^house_tone ---> S7
    10": Z1; ADD N; SHOW 7, No Trial Init, N ---> S2
S7,
    0.25": OFF^house_tone; Z2 ---> S2

S.S.2,                                     \Randomize Trial
S1,
    #Z2: RANDD A(0) = X ---> S2
S2,
    0.01": IF A(0) =1[@TRUE, @FALSE]
        @TRUE: Z3 ---> S1
        @FALSE: Z4 ---> S1

S.S.3,                                     \left reward port activity
S1,
    #Z3: ON^left_reward; ADD G(1); SHOW 3, Rewards given, G(1); ADD G(2) ---> S2
S2,
    1.25": OFF^left_reward ---> S3
S3,
    #R^left_NP: ADD C(1); ADD C(2); SHOW 4, Rewards Collected, C(1); Z1 ---> S1

    5": ADD M; SHOW 6, Missed trial, M; Z1 ---> S1


S.S.4,                                     \right reward port activity
S1,
    #Z4: ON^right_reward; ADD G(1); SHOW 3, Rewards given, G(1); ADD G(3) ---> S2
S2,
    1.25": OFF^right_reward ---> S3

S3,
    #R^right_NP: ADD C(1); ADD C(3); SHOW 4, Rewards Collected, C(1); Z1 ---> S1

    5": ADD M; SHOW 6, Missed trial, M; Z1 ---> S1

S.S.5,                                    \Entry Moniter
S1,
    #START: ---> S2
S2,
    #R^center_NP: SET P(I) = 1; SET E(I)= T; SET R(I) = K ---> S3

S3,
    #R^center_NP: ---> S3

    0.01": SET L(I) = T; SET D(I) = (L(I) - E(I)); SHOW 5, Nosepoke Duration, D(I) --->S2


S.S.6,
S1,
    #START: SET A(1) = 4500 ---> S2
S2,
    0.01": SET T = T + 0.01; SHOW 1, Session Timer, T; IF T >= A(1) [@TRUE,@FALSE]
        @TRUE:  IF I > 1000[@TRUE,@FALSE]
            @TRUE: ---> SX
            @FALSE: SET D(I) = -987.987; SET E(I) = -987.987; SET L(I)=-987.987; SET P(I) = -987.987---> STOPSAVE
        @FALSE: ---> SX

S.S.7,                                      \End session by rewards collected
S1,
    #START: ---> S2

S2,
    5": IF C(1) = 100[@TRUE, @FALSE]
        @TRUE: ON^house_light; SET D(I) = -987.987; SET E(I) = -987.987; SET L(I)=-987.987; SET P(I) = -987.987 ---> STOPSAVE
        @FALSE: ---> SX


